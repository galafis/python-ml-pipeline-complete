# Docker Compose for ML Pipeline Infrastructure
version: '3.8'

services:
  # FastAPI Application
  ml-api:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: ml-api
    ports:
      - "8000:8000"
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - PYTHONPATH=/app
    depends_on:
      - mlflow
      - postgres
    volumes:
      - ../models:/app/models
      - ../data:/app/data
    networks:
      - ml-network
    restart: unless-stopped

  # MLflow Tracking Server
  mlflow:
    image: python:3.9-slim
    container_name: mlflow
    ports:
      - "5000:5000"
    environment:
      - MLFLOW_BACKEND_STORE_URI=postgresql://mlflow:mlflow@postgres:5432/mlflow
      - MLFLOW_DEFAULT_ARTIFACT_ROOT=/mlflow/artifacts
    command: >
      bash -c "pip install mlflow psycopg2-binary &&
               mlflow server 
               --backend-store-uri postgresql://mlflow:mlflow@postgres:5432/mlflow 
               --default-artifact-root /mlflow/artifacts 
               --host 0.0.0.0 
               --port 5000"
    volumes:
      - mlflow-artifacts:/mlflow/artifacts
    depends_on:
      - postgres
    networks:
      - ml-network
    restart: unless-stopped

  # PostgreSQL Database for MLflow
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      - POSTGRES_DB=mlflow
      - POSTGRES_USER=mlflow
      - POSTGRES_PASSWORD=mlflow
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - ml-network
    restart: unless-stopped

  # Jupyter Notebook Server (optional)
  jupyter:
    build:
      context: ..
      dockerfile: docker/Dockerfile.jupyter
    container_name: jupyter
    ports:
      - "8888:8888"
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    volumes:
      - ../notebooks:/app/notebooks
      - ../data:/app/data
      - ../src:/app/src
    networks:
      - ml-network
    restart: unless-stopped

  # Redis for caching (optional)
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - ml-network
    restart: unless-stopped

volumes:
  postgres-data:
  mlflow-artifacts:
  redis-data:

networks:
  ml-network:
    driver: bridge
